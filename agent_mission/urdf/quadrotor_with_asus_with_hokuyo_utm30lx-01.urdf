<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from quadrotor_with_asus_with_hokuyo_utm30lx.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="quadrotor" xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- Included URDF Files -->
  <!-- Main quadrotor link -->
  <!-- Instantiate quadrotor_base_macro once (has no parameters atm) -->
<material name="Blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <link name="base_link">
    <inertial>
      <mass value="1.477"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.01152" ixy="0.0" ixz="0.0" iyy="0.01152" iyz="0.0" izz="0.0218"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hector_quadrotor_description/meshes/quadrotor/quadrotor_base.dae"/>
      </geometry>
      <material name="Blue"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hector_quadrotor_description/meshes/quadrotor/quadrotor_base.stl"/>
      </geometry>
      <material name="Blue"/>
    </collision>
  </link>
  <!-- Sonar height sensor -->
  <joint name="sonar_joint" type="fixed">
    <origin rpy="0 1.57079632679 0" xyz="-0.16 0.0 -0.012"/>
    <parent link="base_link"/>
    <child link="sonar_link"/>
  </joint>
  <link name="sonar_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.000000017" ixy="0" ixz="0" iyy="0.000000017" iyz="0" izz="0.000000017"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!--<box size="0.01 0.01 0.01" /> -->
        <mesh filename="package://hector_sensors_description/meshes/sonar_sensor/max_sonar_ez4.dae"/>
      </geometry>
      <material name="Blue"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="sonar_link">
    <sensor name="sonar" type="ray">
      <always_on>true</always_on>
      <update_rate>10</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>3</samples>
            <resolution>1</resolution>
            <min_angle>-0.349065850399</min_angle>
            <max_angle> 0.349065850399</max_angle>
          </horizontal>
          <vertical>
            <samples>3</samples>
            <resolution>1</resolution>
            <min_angle>-0.349065850399</min_angle>
            <max_angle> 0.349065850399</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.03</min>
          <max>3.0</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libhector_gazebo_ros_sonar.so" name="gazebo_ros_sonar_controller">
        <gaussianNoise>0.005</gaussianNoise>
        <topicName>sonar_height</topicName>
        <frameId>sonar_link</frameId>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Hokuyo UTM-30LX mounted upside down below the quadrotor body -->
  <joint name="laser0_joint" type="fixed">
    <origin rpy="3.14159265359 0 0" xyz="0.0 0.0 -0.097"/>
    <parent link="base_link"/>
    <child link="laser0_frame"/>
  </joint>
  <link name="laser0_frame">
    <inertial>
      <mass value="0.270"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="2.632e-4" ixy="0" ixz="0" iyy="2.632e-4" iyz="0" izz="1.62e-4"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hector_sensors_description/meshes/hokuyo_utm30lx/hokuyo_utm_30lx.dae"/>
      </geometry>
      <material name="Blue"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 -0.0115"/>
      <geometry>
        <box size="0.058 0.058 0.087"/>
        <!--<mesh filename="package://hector_sensors_description/meshes/hokuyo_utm30lx/hokuyo_utm_30lx.stl"/>-->
      </geometry>
      <material name="Blue"/>
    </collision>
  </link>
  <gazebo reference="laser0_frame">
    <sensor name="laser0" type="ray">
      <always_on>true</always_on>
      <update_rate>40</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>1081</samples>
            <resolution>1</resolution>
            <min_angle>-2.35619449019</min_angle>
            <max_angle>2.35619449019</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.08</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_laser0_controller">
        <gaussianNoise>0.005</gaussianNoise>
        <alwaysOn>true</alwaysOn>
        <updateRate>40</updateRate>
        <topicName>scan</topicName>
        <frameName>laser0_frame</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Asus Xiton Live Pro -->
  <joint name="camera_joint" type="fixed">
    <origin rpy="0 0.349065850399 0" xyz="0.1 0.0 -0.03"/>
    <parent link="base_link"/>
    <child link="camera_link"/>
  </joint>
  <link name="camera_link">
    <inertial>
      <mass value="0.200"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="5.8083e-4" ixy="0" ixz="0" iyy="3.0833e-5" iyz="0" izz="5.9083e-4"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hector_sensors_description/meshes/asus_camera/asus_camera_simple.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.035 0.185 0.025"/>
      </geometry>
    </collision>
  </link>
  <joint name="camera_depth_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.049 0.0"/>
    <parent link="camera_link"/>
    <child link="camera_depth_frame"/>
  </joint>
  <link name="camera_depth_frame"/>
  <joint name="camera_depth_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0.0 -1.57079632679" xyz="0 0 0"/>
    <parent link="camera_depth_frame"/>
    <child link="camera_depth_optical_frame"/>
  </joint>
  <link name="camera_depth_optical_frame"/>
  <joint name="camera_rgb_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.022 0.0"/>
    <parent link="camera_link"/>
    <child link="camera_rgb_frame"/>
  </joint>
  <link name="camera_rgb_frame"/>
  <joint name="camera_rgb_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0.0 -1.57079632679" xyz="0 0 0"/>
    <parent link="camera_rgb_frame"/>
    <child link="camera_rgb_optical_frame"/>
  </joint>
  <link name="camera_rgb_optical_frame"/>
  <!-- ASUS Xtion PRO camera for simulation -->
  <gazebo reference="camera_depth_frame">
    <sensor name="camera" type="depth">
      <update_rate>20</update_rate>
      <camera>
        <horizontal_fov>1.09606677025</horizontal_fov>
        <image>
          <format>R8G8B8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.5</near>
          <far>9</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="camera_camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>20</updateRate>
        <imageTopicName>camera/rgb/image_raw</imageTopicName>
        <cameraInfoTopicName>camera/rgb/camera_info</cameraInfoTopicName>
        <depthImageTopicName>camera/depth/image_raw</depthImageTopicName>
        <depthImageCameraInfoTopicName>camera/depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>camera/depth/points</pointCloudTopicName>
        <frameName>camera_depth_optical_frame</frameName>
        <distortion_k1>0.0</distortion_k1>
        <distortion_k2>0.0</distortion_k2>
        <distortion_k3>0.0</distortion_k3>
        <distortion_t1>0.0</distortion_t1>
        <distortion_t2>0.0</distortion_t2>
      </plugin>
    </sensor>
  </gazebo>
</robot>
