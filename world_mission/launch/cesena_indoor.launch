<?xml version="1.0" encoding="utf-8"?>
<launch>
  <param name="initial_package" type="string" value="iai_swm" />
  <node name="json_prolog" pkg="json_prolog" type="json_prolog_node" cwd="node" output="screen" />

 <node pkg="instruct_mission" type="multimodal_parser" name="multimodal_parser" respawn="false" output="screen" />



  <node pkg="world_mission" type="wgs2ned_server" name="wgs2ned_server" respawn="false" output="screen" />
 
 <node pkg="world_mission" type="ned2wgs_server" name="ned2wgs_server" respawn="false" output="screen" />
   

 <node pkg="tf" type="static_transform_publisher" name="world_map" args="0 0 0 0 0 0 1 /world /map 100"  />
<!--
   <node pkg="swri_transform_util" type="initialize_origin.py" name="initialize_origin" >
     <param name="local_xy_frame" value="/map"/>
     <param name="local_xy_origin" value="Sherpa"/>
     <rosparam param="local_xy_origins">
       [{ name: Sherpa,
       latitude: 45.844409891,
       longitude: 7.730704791,
       altitude: 1580,
       heading: 0.0}]
     </rosparam>
   </node>
-->

 <node pkg="instruct_mission" type="multimodal_actionsubscriber" name="multimodal_actionsubscriber" respawn="false" output="screen" />

 <node pkg="startup_mission" type="starter" name="starter" respawn="false"
 output="screen" />

 <node pkg="instruct_mission" type="checker" name="checker" respawn="false" output="screen" />


 <!--node pkg="world_mission" type="unihb_reasoning.sh" name="unihb_reasoning" /-->
   

</launch>

